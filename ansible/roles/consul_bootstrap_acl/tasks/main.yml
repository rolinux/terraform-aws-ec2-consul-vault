# add wait to tasks to allow cluster to come up
- name: wait to cluster to come up before bootstrap
  ansible.builtin.pause:
    seconds: 15

# copy node-policy.hcl to /tmp
- name: copy node-policy.hcl to /tmp
  ansible.builtin.copy:
    src: "node-policy.hcl"
    dest: "/tmp/"
    mode: "0600"

- name: bootstrap idempotency
  block:
    # generate the bootstrap token
    - name: acl bootstrap
      command: consul acl bootstrap
      register: acl_bootstrap

    # to extract bootstrap token we need second line of the output
    # then split by spaces and token is in second part
    - name: extract bootstrap token
      ansible.builtin.set_fact:
        bootstrap_token: "{{ acl_bootstrap.stdout_lines[1].split()[1] }}"


    # create acl node-policy
    - name: create acl node-policy
      command: consul acl policy create -token="{{ bootstrap_token }}" -name node-policy -rules @node-policy.hcl
      args:
        chdir: "/tmp/"

    # create node token
    - name: acl node token
      command: consul acl token create -token="{{ bootstrap_token }}" -description "node token" -policy-name node-policy
      register: acl_node

    # to extract agent token we need second line of the output
    # then split by spaces and token is in second part
    - name: extract agent token
      ansible.builtin.set_fact:
        agent_token: "{{ acl_node.stdout_lines[1].split()[1] }}"

    # output the primary host IP and the agent_token and bootstrap_token

    - debug: msg="Connect to http://{{ ansible_host }}:8500 and use the {{ agent_token }} agent token ( {{ bootstrap_token }} bootstrap token)"

  rescue: 
    - debug: 
        msg: "Cluster already ACL bootstrapped"
